{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805460ff1916600117905534801561001d57600080fd5b506116ac8061002d6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630a9254e4146100515780639642ddaf1461005b578063ba414fa614610063578063fa7626d41461007f575b600080fd5b61005961008c565b005b610059610165565b61006b6102b0565b604051901515815260200160405180910390f35b60005461006b9060ff1681565b60405161009890610612565b6080808252600590820181905264426164676560d81b60a083015260c06020830181905282015264424144474560d81b60e082015261010060408201819052600a90820152694261646765204e616d6560b01b61012082015261014060608201819052601190820152702130b233b2902232b9b1b934b83a34b7b760791b61016082015261018001604051809103906000f08015801561013c573d6000803e3d6000fd5b50600060026101000a8154816001600160a01b0302191690836001600160a01b03160217905550565b6000546040516340c10f1960e01b815230600482015260016024820152620100009091046001600160a01b0316906340c10f1990604401600060405180830381600087803b1580156101b657600080fd5b505af11580156101ca573d6000803e3d6000fd5b5050600080546040516370a0823160e01b81523060048201529193506201000090046001600160a01b031691506370a082319060240160206040518083038186803b15801561021857600080fd5b505afa15801561022c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610250919061061f565b905061025d8160016103db565b604080518181526007818301526642616c616e636560c81b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a150565b60008054610100900460ff16156102d05750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156103d65760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909161035e917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610673565b60408051601f198184030181529082905261037891610697565b6000604051808303816000865af19150503d80600081146103b5576040519150601f19603f3d011682016040523d82523d6000602084013e6103ba565b606091505b50915050808060200190518101906103d291906106aa565b9150505b919050565b808214610502577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405161044c9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1610502610506565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156106015760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526105a09291602001610673565b60408051601f19818403018152908290526105ba91610697565b6000604051808303816000865af19150503d80600081146105f7576040519150601f19603f3d011682016040523d82523d6000602084013e6105fc565b606091505b505050505b6000805461ff001916610100179055565b610faa806106cd83390190565b60006020828403121561063157600080fd5b5051919050565b6000815160005b81811015610659576020818501810151868301520161063f565b81811115610668576000828601525b509290920192915050565b6001600160e01b031983168152600061068f6004830184610638565b949350505050565b60006106a38284610638565b9392505050565b6000602082840312156106bc57600080fd5b815180151581146106a357600080fdfe60806040523480156200001157600080fd5b5060405162000faa38038062000faa833981016040819052620000349162000221565b8351849084906200004d906004906020850190620000ae565b50805162000063906005906020840190620000ae565b5050600880546001600160a01b031916331790555081516200008d906009906020850190620000ae565b508051620000a390600a906020840190620000ae565b505050505062000317565b828054620000bc90620002da565b90600052602060002090601f016020900481019282620000e057600085556200012b565b82601f10620000fb57805160ff19168380011785556200012b565b828001600101855582156200012b579182015b828111156200012b5782518255916020019190600101906200010e565b50620001399291506200013d565b5090565b5b808211156200013957600081556001016200013e565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200017c57600080fd5b81516001600160401b038082111562000199576200019962000154565b604051601f8301601f19908116603f01168101908282118183101715620001c457620001c462000154565b81604052838152602092508683858801011115620001e157600080fd5b600091505b83821015620002055785820183015181830184015290820190620001e6565b83821115620002175760008385830101525b9695505050505050565b600080600080608085870312156200023857600080fd5b84516001600160401b03808211156200025057600080fd5b6200025e888389016200016a565b955060208701519150808211156200027557600080fd5b62000283888389016200016a565b945060408701519150808211156200029a57600080fd5b620002a8888389016200016a565b93506060870151915080821115620002bf57600080fd5b50620002ce878288016200016a565b91505092959194509250565b600181811c90821680620002ef57607f821691505b602082108114156200031157634e487b7160e01b600052602260045260246000fd5b50919050565b610c8380620003276000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c57806395d89b411161006657806395d89b41146101fe578063b708f2fa14610206578063c87b56dd14610229578063f577a5001461023c57600080fd5b80636352211e146101a25780636b4ed21b146101cd57806370a08231146101d557600080fd5b80632f745c59116100c85780632f745c591461013e57806340c10f191461015157806343945512146101665780634f6ccce71461019157600080fd5b806301ffc9a7146100ef57806306fdde031461011757806326019c181461012c575b600080fd5b6101026100fd3660046108d7565b61024f565b60405190151581526020015b60405180910390f35b61011f6102bc565b60405161010e9190610938565b6006545b60405190815260200161010e565b61013061014c366004610987565b61034e565b61016461015f366004610987565b6103d8565b005b6101026101743660046109b1565b6001600160a01b0316600090815260036020526040902054151590565b61013061019f3660046109cc565b90565b6101b56101b03660046109cc565b610494565b6040516001600160a01b03909116815260200161010e565b600754610130565b6101306101e33660046109b1565b6001600160a01b031660009081526001602052604090205490565b61011f6104b2565b6101026102143660046109b1565b600b6020526000908152604090205460ff1681565b61011f6102373660046109cc565b6104c1565b61010261024a3660046109cc565b61051b565b60006001600160e01b0319821663a511533d60e01b148061028057506001600160e01b03198216635b5e139f60e01b145b8061029b57506001600160e01b03198216632d57debd60e01b145b806102b657506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600480546102cb906109e5565b80601f01602080910402602001604051908101604052809291908181526020018280546102f7906109e5565b80156103445780601f1061031957610100808354040283529160200191610344565b820191906000526020600020905b81548152906001019060200180831161032757829003601f168201915b5050505050905090565b6001600160a01b0382166000908152600160205260408120805483106103b25760405162461bcd60e51b8152602060048201526014602482015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b60448201526064015b60405180910390fd5b8083815481106103c4576103c4610a20565b906000526020600020015491505092915050565b336000908152600b602052604090205460ff161561042e5760405162461bcd60e51b8152602060048201526013602482015272155cd95c88185b1c9958591e481b5a5b9d1959606a1b60448201526064016103a9565b60006104393361053a565b336000818152600b6020908152604091829020805460ff19166001179055815192835282018390529192507fdcdea898caf5576419f89caf69301592a4758349a0bd62300b58849213420a72910160405180910390a1505050565b600061049f826105a9565b600101546001600160a01b031692915050565b6060600580546102cb906109e5565b606060006009600a6040516020016104da929190610ad0565b60405160208183030381529060405290506104f481610608565b6040516020016105049190610b43565b604051602081830303815290604052915050919050565b6000610526826105a9565b60010154600160a01b900460ff1692915050565b6006546105498282600161075c565b604080516001600160a01b0384168152602081018390527f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe910160405180910390a160016006600082825461059e9190610b9e565b909155509092915050565b600081815260208190526040812060018101546001600160a01b03166102b65760405162461bcd60e51b8152602060048201526014602482015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b60448201526064016103a9565b606081516000141561062857505060408051602081019091526000815290565b6000604051806060016040528060408152602001610c0e60409139905060006003845160026106579190610b9e565b6106619190610bb6565b61066c906004610bd8565b67ffffffffffffffff81111561068457610684610bf7565b6040519080825280601f01601f1916602001820160405280156106ae576020820181803683370190505b509050600182016020820185865187015b8082101561071a576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f81168501518453506001830192506106bf565b5050600386510660018114610736576002811461074957610751565b603d6001830353603d6002830353610751565b603d60018303535b509195945050505050565b6000828152602081905260409020600101546001600160a01b0316156107c45760405162461bcd60e51b815260206004820152601d60248201527f43616e6e6f74206d696e7420616e2061737369676e656420746f6b656e00000060448201526064016103a9565b6001600160a01b0383166000908152600160205260409020546107fa576001600760008282546107f49190610b9e565b90915550505b604080516060810182523381526001600160a01b0385811660208084018281528615801586880190815260008a8152808552888120975188549088166001600160a01b031990911617885592516001978801805492511515600160a01b026001600160a81b031990931691909716171790945591825283815284822080546002835286842089855283529583208690558482529385018455928152919091209091018390556108d2576001600160a01b03831660009081526003602052604081208054600192906108cc908490610b9e565b90915550505b505050565b6000602082840312156108e957600080fd5b81356001600160e01b03198116811461090157600080fd5b9392505050565b60005b8381101561092357818101518382015260200161090b565b83811115610932576000848401525b50505050565b6020815260008251806020840152610957816040850160208701610908565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461098257600080fd5b919050565b6000806040838503121561099a57600080fd5b6109a38361096b565b946020939093013593505050565b6000602082840312156109c357600080fd5b6109018261096b565b6000602082840312156109de57600080fd5b5035919050565b600181811c908216806109f957607f821691505b60208210811415610a1a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b8054600090600181811c9080831680610a5057607f831692505b6020808410821415610a7257634e487b7160e01b600052602260045260246000fd5b818015610a865760018114610a9757610ac4565b60ff19861689528489019650610ac4565b60008881526020902060005b86811015610abc5781548b820152908501908301610aa3565b505084890196505b50505050505092915050565b607b60f81b815268113730b6b2911d101160b91b60018201526000610af8600a830185610a36565b61088b60f21b81526f113232b9b1b934b83a34b7b7111d101160811b6002820152610b266012820185610a36565b601160f91b8152607d60f81b600182015260020195945050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000815260008251610b7b81601d850160208701610908565b91909101601d0192915050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610bb157610bb1610b88565b500190565b600082610bd357634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610bf257610bf2610b88565b500290565b634e487b7160e01b600052604160045260246000fdfe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa2646970667358221220dd4b30b03b65d7d4fe6e00410f683e526039e4a06bc591f1c09f4e1ededab81964736f6c63430008090033a2646970667358221220b086d93b3a33ccf1c52cc4575093d2798cf9ba72988fb42fe72e5415e05ad0cc64736f6c63430008090033",
    "sourceMap": "97:372:16:-:0;;;1572:26:5;;;-1:-1:-1;;1572:26:5;1594:4;1572:26;;;97:372:16;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80630a9254e4146100515780639642ddaf1461005b578063ba414fa614610063578063fa7626d41461007f575b600080fd5b61005961008c565b005b610059610165565b61006b6102b0565b604051901515815260200160405180910390f35b60005461006b9060ff1681565b60405161009890610612565b6080808252600590820181905264426164676560d81b60a083015260c06020830181905282015264424144474560d81b60e082015261010060408201819052600a90820152694261646765204e616d6560b01b61012082015261014060608201819052601190820152702130b233b2902232b9b1b934b83a34b7b760791b61016082015261018001604051809103906000f08015801561013c573d6000803e3d6000fd5b50600060026101000a8154816001600160a01b0302191690836001600160a01b03160217905550565b6000546040516340c10f1960e01b815230600482015260016024820152620100009091046001600160a01b0316906340c10f1990604401600060405180830381600087803b1580156101b657600080fd5b505af11580156101ca573d6000803e3d6000fd5b5050600080546040516370a0823160e01b81523060048201529193506201000090046001600160a01b031691506370a082319060240160206040518083038186803b15801561021857600080fd5b505afa15801561022c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610250919061061f565b905061025d8160016103db565b604080518181526007818301526642616c616e636560c81b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a150565b60008054610100900460ff16156102d05750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156103d65760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909161035e917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610673565b60408051601f198184030181529082905261037891610697565b6000604051808303816000865af19150503d80600081146103b5576040519150601f19603f3d011682016040523d82523d6000602084013e6103ba565b606091505b50915050808060200190518101906103d291906106aa565b9150505b919050565b808214610502577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405161044c9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1610502610506565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156106015760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526105a09291602001610673565b60408051601f19818403018152908290526105ba91610697565b6000604051808303816000865af19150503d80600081146105f7576040519150601f19603f3d011682016040523d82523d6000602084013e6105fc565b606091505b505050505b6000805461ff001916610100179055565b610faa806106cd83390190565b60006020828403121561063157600080fd5b5051919050565b6000815160005b81811015610659576020818501810151868301520161063f565b81811115610668576000828601525b509290920192915050565b6001600160e01b031983168152600061068f6004830184610638565b949350505050565b60006106a38284610638565b9392505050565b6000602082840312156106bc57600080fd5b815180151581146106a357600080fdfe60806040523480156200001157600080fd5b5060405162000faa38038062000faa833981016040819052620000349162000221565b8351849084906200004d906004906020850190620000ae565b50805162000063906005906020840190620000ae565b5050600880546001600160a01b031916331790555081516200008d906009906020850190620000ae565b508051620000a390600a906020840190620000ae565b505050505062000317565b828054620000bc90620002da565b90600052602060002090601f016020900481019282620000e057600085556200012b565b82601f10620000fb57805160ff19168380011785556200012b565b828001600101855582156200012b579182015b828111156200012b5782518255916020019190600101906200010e565b50620001399291506200013d565b5090565b5b808211156200013957600081556001016200013e565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200017c57600080fd5b81516001600160401b038082111562000199576200019962000154565b604051601f8301601f19908116603f01168101908282118183101715620001c457620001c462000154565b81604052838152602092508683858801011115620001e157600080fd5b600091505b83821015620002055785820183015181830184015290820190620001e6565b83821115620002175760008385830101525b9695505050505050565b600080600080608085870312156200023857600080fd5b84516001600160401b03808211156200025057600080fd5b6200025e888389016200016a565b955060208701519150808211156200027557600080fd5b62000283888389016200016a565b945060408701519150808211156200029a57600080fd5b620002a8888389016200016a565b93506060870151915080821115620002bf57600080fd5b50620002ce878288016200016a565b91505092959194509250565b600181811c90821680620002ef57607f821691505b602082108114156200031157634e487b7160e01b600052602260045260246000fd5b50919050565b610c8380620003276000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c57806395d89b411161006657806395d89b41146101fe578063b708f2fa14610206578063c87b56dd14610229578063f577a5001461023c57600080fd5b80636352211e146101a25780636b4ed21b146101cd57806370a08231146101d557600080fd5b80632f745c59116100c85780632f745c591461013e57806340c10f191461015157806343945512146101665780634f6ccce71461019157600080fd5b806301ffc9a7146100ef57806306fdde031461011757806326019c181461012c575b600080fd5b6101026100fd3660046108d7565b61024f565b60405190151581526020015b60405180910390f35b61011f6102bc565b60405161010e9190610938565b6006545b60405190815260200161010e565b61013061014c366004610987565b61034e565b61016461015f366004610987565b6103d8565b005b6101026101743660046109b1565b6001600160a01b0316600090815260036020526040902054151590565b61013061019f3660046109cc565b90565b6101b56101b03660046109cc565b610494565b6040516001600160a01b03909116815260200161010e565b600754610130565b6101306101e33660046109b1565b6001600160a01b031660009081526001602052604090205490565b61011f6104b2565b6101026102143660046109b1565b600b6020526000908152604090205460ff1681565b61011f6102373660046109cc565b6104c1565b61010261024a3660046109cc565b61051b565b60006001600160e01b0319821663a511533d60e01b148061028057506001600160e01b03198216635b5e139f60e01b145b8061029b57506001600160e01b03198216632d57debd60e01b145b806102b657506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600480546102cb906109e5565b80601f01602080910402602001604051908101604052809291908181526020018280546102f7906109e5565b80156103445780601f1061031957610100808354040283529160200191610344565b820191906000526020600020905b81548152906001019060200180831161032757829003601f168201915b5050505050905090565b6001600160a01b0382166000908152600160205260408120805483106103b25760405162461bcd60e51b8152602060048201526014602482015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b60448201526064015b60405180910390fd5b8083815481106103c4576103c4610a20565b906000526020600020015491505092915050565b336000908152600b602052604090205460ff161561042e5760405162461bcd60e51b8152602060048201526013602482015272155cd95c88185b1c9958591e481b5a5b9d1959606a1b60448201526064016103a9565b60006104393361053a565b336000818152600b6020908152604091829020805460ff19166001179055815192835282018390529192507fdcdea898caf5576419f89caf69301592a4758349a0bd62300b58849213420a72910160405180910390a1505050565b600061049f826105a9565b600101546001600160a01b031692915050565b6060600580546102cb906109e5565b606060006009600a6040516020016104da929190610ad0565b60405160208183030381529060405290506104f481610608565b6040516020016105049190610b43565b604051602081830303815290604052915050919050565b6000610526826105a9565b60010154600160a01b900460ff1692915050565b6006546105498282600161075c565b604080516001600160a01b0384168152602081018390527f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe910160405180910390a160016006600082825461059e9190610b9e565b909155509092915050565b600081815260208190526040812060018101546001600160a01b03166102b65760405162461bcd60e51b8152602060048201526014602482015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b60448201526064016103a9565b606081516000141561062857505060408051602081019091526000815290565b6000604051806060016040528060408152602001610c0e60409139905060006003845160026106579190610b9e565b6106619190610bb6565b61066c906004610bd8565b67ffffffffffffffff81111561068457610684610bf7565b6040519080825280601f01601f1916602001820160405280156106ae576020820181803683370190505b509050600182016020820185865187015b8082101561071a576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f81168501518453506001830192506106bf565b5050600386510660018114610736576002811461074957610751565b603d6001830353603d6002830353610751565b603d60018303535b509195945050505050565b6000828152602081905260409020600101546001600160a01b0316156107c45760405162461bcd60e51b815260206004820152601d60248201527f43616e6e6f74206d696e7420616e2061737369676e656420746f6b656e00000060448201526064016103a9565b6001600160a01b0383166000908152600160205260409020546107fa576001600760008282546107f49190610b9e565b90915550505b604080516060810182523381526001600160a01b0385811660208084018281528615801586880190815260008a8152808552888120975188549088166001600160a01b031990911617885592516001978801805492511515600160a01b026001600160a81b031990931691909716171790945591825283815284822080546002835286842089855283529583208690558482529385018455928152919091209091018390556108d2576001600160a01b03831660009081526003602052604081208054600192906108cc908490610b9e565b90915550505b505050565b6000602082840312156108e957600080fd5b81356001600160e01b03198116811461090157600080fd5b9392505050565b60005b8381101561092357818101518382015260200161090b565b83811115610932576000848401525b50505050565b6020815260008251806020840152610957816040850160208701610908565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461098257600080fd5b919050565b6000806040838503121561099a57600080fd5b6109a38361096b565b946020939093013593505050565b6000602082840312156109c357600080fd5b6109018261096b565b6000602082840312156109de57600080fd5b5035919050565b600181811c908216806109f957607f821691505b60208210811415610a1a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b8054600090600181811c9080831680610a5057607f831692505b6020808410821415610a7257634e487b7160e01b600052602260045260246000fd5b818015610a865760018114610a9757610ac4565b60ff19861689528489019650610ac4565b60008881526020902060005b86811015610abc5781548b820152908501908301610aa3565b505084890196505b50505050505092915050565b607b60f81b815268113730b6b2911d101160b91b60018201526000610af8600a830185610a36565b61088b60f21b81526f113232b9b1b934b83a34b7b7111d101160811b6002820152610b266012820185610a36565b601160f91b8152607d60f81b600182015260020195945050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000815260008251610b7b81601d850160208701610908565b91909101601d0192915050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610bb157610bb1610b88565b500190565b600082610bd357634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610bf257610bf2610b88565b500290565b634e487b7160e01b600052604160045260246000fdfe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa2646970667358221220dd4b30b03b65d7d4fe6e00410f683e526039e4a06bc591f1c09f4e1ededab81964736f6c63430008090033a2646970667358221220b086d93b3a33ccf1c52cc4575093d2798cf9ba72988fb42fe72e5415e05ad0cc64736f6c63430008090033",
    "sourceMap": "97:372:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;153:111;;;:::i;:::-;;270:197;;;:::i;1819:584:5:-;;;:::i;:::-;;;179:14:18;;172:22;154:41;;142:2;127:18;1819:584:5;;;;;;;1572:26;;;;;;;;;153:111:16;195:62;;;;;:::i;:::-;711:3:18;693:22;;;752:1;731:19;;;724:30;;;-1:-1:-1;;;785:3:18;770:19;;763:36;837:3;830:4;815:20;;808:33;;;857:19;;850:30;-1:-1:-1;;;911:3:18;896:19;;889:36;944:3;978:2;963:18;;956:30;;;1022:2;1002:18;;;995:30;-1:-1:-1;;;1056:3:18;1041:19;;1034:41;1094:3;-1:-1:-1;1113:18:18;;1106:30;;;1172:2;1152:18;;;1145:30;-1:-1:-1;;;1206:3:18;1191:19;;1184:48;1264:3;1249:19;195:62:16;;;;;;;;;;;;;;;;;;;;;;;187:5;;:70;;;;;-1:-1:-1;;;;;187:70:16;;;;;-1:-1:-1;;;;;187:70:16;;;;;;153:111::o;270:197::-;307:5;;:28;;-1:-1:-1;;;307:28:16;;326:4;307:28;;;1461:51:18;333:1:16;1528:18:18;;;1521:34;307:5:16;;;;-1:-1:-1;;;;;307:5:16;;:10;;1434:18:18;;307:28:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;345:11:16;359:5;;:30;;-1:-1:-1;;;359:30:16;;383:4;359:30;;;1712:51:18;345:11:16;;-1:-1:-1;359:5:16;;;-1:-1:-1;;;;;359:5:16;;-1:-1:-1;359:15:16;;1685:18:18;;359:30:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;345:44;;399:16;408:3;413:1;399:8;:16::i;:::-;430:30;;;2175:21:18;;;2232:1;2212:18;;;2205:29;-1:-1:-1;;;2265:2:18;2250:18;;2243:37;2347:4;2332:20;;2325:36;;;430:30:16;;;;;;;2312:3:18;430:30:16;;;297:170;270:197::o;1819:584:5:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:5;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;1461:51:18;;;-1:-1:-1;;;1528:18:18;;;1521:34;2196:43:5;;;;;;;;;1434:18:18;;;2196:43:5;;;-1:-1:-1;;1671:64:5;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:5;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:5:o;5202:262::-;5264:1;5259;:6;5255:203;;5286:41;;;;;3953:2:18;3935:21;;;3992:2;3972:18;;;3965:30;4031:34;4026:2;4011:18;;4004:62;-1:-1:-1;;;4097:2:18;4082:18;;4075:32;4139:3;4124:19;;3751:398;5286:41:5;;;;;;;;5346:31;;;4366:21:18;;;4423:2;4403:18;;;4396:30;-1:-1:-1;;;4457:2:18;4442:18;;4435:40;4542:4;4527:20;;4520:36;;;5346:31:5;;;;;;;4507:3:18;5346:31:5;;;5396;;;4779:21:18;;;4836:2;4816:18;;;4809:30;-1:-1:-1;;;4870:2:18;4855:18;;4848:40;4955:4;4940:20;;4933:36;;;5396:31:5;;;;;;;4920:3:18;5396:31:5;;;5441:6;:4;:6::i;:::-;5202:262;;:::o;2410:424::-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;5182:51:18;;;-1:-1:-1;;;5249:18:18;;;5242:34;;;;2705:4:5;5292:18:18;;;5285:34;2482:11:5;;1671:64;2579:43;;5155:18:18;;2645:67:5;;;-1:-1:-1;;2645:67:5;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:5;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:5;2813:7;:14;;-1:-1:-1;;2813:14:5;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;1774:184:18:-;1844:6;1897:2;1885:9;1876:7;1872:23;1868:32;1865:52;;;1913:1;1910;1903:12;1865:52;-1:-1:-1;1936:16:18;;1774:184;-1:-1:-1;1774:184:18:o;2651:336::-;2692:3;2730:5;2724:12;2754:1;2764:128;2778:6;2775:1;2772:13;2764:128;;;2875:4;2860:13;;;2856:24;;2850:31;2837:11;;;2830:52;2793:12;2764:128;;;2910:6;2907:1;2904:13;2901:48;;;2945:1;2936:6;2931:3;2927:16;2920:27;2901:48;-1:-1:-1;2965:16:18;;;;;2651:336;-1:-1:-1;;2651:336:18:o;2992:278::-;-1:-1:-1;;;;;;3177:33:18;;3165:46;;3147:3;3227:37;3261:1;3252:11;;3244:6;3227:37;:::i;:::-;3220:44;2992:278;-1:-1:-1;;;;2992:278:18:o;3275:189::-;3404:3;3429:29;3454:3;3446:6;3429:29;:::i;:::-;3422:36;3275:189;-1:-1:-1;;;3275:189:18:o;3469:277::-;3536:6;3589:2;3577:9;3568:7;3564:23;3560:32;3557:52;;;3605:1;3602;3595:12;3557:52;3637:9;3631:16;3690:5;3683:13;3676:21;3669:5;3666:32;3656:60;;3712:1;3709;3702:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testMint()": "9642ddaf"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Badge.t.sol\":\"Badgeg_Test\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"contracts/Badge.sol\":{\"keccak256\":\"0x71c8cb9c9fd9288e5a610975cd3c82532b289042e18838042f5b652a127adfa9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1a6abac2deb4d69eb53a9971e3c788cf0f9975fdf6f0c61fe8e830a7cfbfd41\",\"dweb:/ipfs/QmZvUYx9GARHrkfjGQnSJ1WFsAwJpzgXusqp55Ga7Vd3RV\"]},\"contracts/ERC4671.sol\":{\"keccak256\":\"0xf81a75b465e521c97cb21161eaf13e1fce6095324a13ee19fd690956e5a0a260\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://62fdabd4e2a7b81220c6bebf79107b777d9eea7fca5ef13e646fec34164765e5\",\"dweb:/ipfs/Qma4a72yiGbRh1Q24fxymnK9UHUJbUopGBCJ1KuWWyjKC6\"]},\"contracts/interfaces/IERC4671.sol\":{\"keccak256\":\"0x88261c2f4ed60a27e2eeea2386edccda0182054e6a10b45ffa6dd6ffb33b40a9\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://b221e21fa286e604ae526c335150d183452ce0a47deee0e4817162a6a8211316\",\"dweb:/ipfs/Qme7QQ7opMqtTN53vvBk6CkNBMukSz8zcnDgZ9iiNyxzKS\"]},\"contracts/interfaces/IERC4671Enumerable.sol\":{\"keccak256\":\"0x12bed9fdb1d4dfe540f780d154fb1101dcc88e319c81c2be272dcd90f26b6f65\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://f2b878cb592b5cc0f49170a6bf23e4e471d1ee23f400edad6531942ccddd4b55\",\"dweb:/ipfs/Qme2igT58a6ARJp7zNgTEqLZ6sXeVSwSHiU9BNkMH9JwvS\"]},\"contracts/interfaces/IERC4671Metadata.sol\":{\"keccak256\":\"0xaaed9686ad72d29c4dfd7ad3ee392873b4e7ea9578473ca7178752b9a10ec5c7\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://5afdee61abb015d785af92b9c6d6615c40596339e3523a8e1561d393aee6ddf1\",\"dweb:/ipfs/QmWjNYJ1zho8uZ3B4tGSQ3ZJ6SNJkbLt3FgL7ZLFhzudNw\"]},\"lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/openzeppelin-contracts/contracts/utils/Base64.sol\":{\"keccak256\":\"0x5f3461639fe20794cfb4db4a6d8477388a15b2e70a018043084b7c4bedfa8136\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77e5309e2cc4cdc3395214edb0ff43ff5a5f7373f5a425383e540f6fab530f96\",\"dweb:/ipfs/QmTV8DZ9knJDa3b5NPBFQqjvTzodyZVjRUg5mx5A99JPLJ\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xbaa90c891304799f6aa4039eae4b59afc0b59ce3bcc647f3fc2bbf5a04b17f1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1cc3f5b077759f92f28ba4182d9410aa8fd586d7efc5f76bdd22228bf2d227f0\",\"dweb:/ipfs/QmbLPLb31LxAyB7GWir5AssC1TYVHqhBsN6R7APj2UV9fv\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xbb9b373ec337797b9f8822171cb191095cb11e729a4fde4c207d25b8b642fb93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6fba7f4448f95e3a42fba5305cc02403eee23aa62e742a0ae7bca609bdaf89da\",\"dweb:/ipfs/QmSXV5FapsVemawU9Zzkx3u3DNLhCaS9MnwcZLsPpMSKnz\"]},\"test/Badge.t.sol\":{\"keccak256\":\"0x7e398466254e39bb96d2e057d8e3119fed4fece476ae22e72e20abadedd0ff7e\",\"urls\":[\"bzz-raw://9c7e5af22f143ca6a9d1d3c8e524f6d8ef7999418f2d0ac63289896b750de0df\",\"dweb:/ipfs/QmdGGjxtvKZm6U8fzUu2NTAGU3PWgn5v994m58LQoBDCXs\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.9+commit.e5eed63a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testMint"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Badge.t.sol": "Badgeg_Test"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/Badge.sol": {
        "keccak256": "0x71c8cb9c9fd9288e5a610975cd3c82532b289042e18838042f5b652a127adfa9",
        "urls": [
          "bzz-raw://e1a6abac2deb4d69eb53a9971e3c788cf0f9975fdf6f0c61fe8e830a7cfbfd41",
          "dweb:/ipfs/QmZvUYx9GARHrkfjGQnSJ1WFsAwJpzgXusqp55Ga7Vd3RV"
        ],
        "license": "MIT"
      },
      "contracts/ERC4671.sol": {
        "keccak256": "0xf81a75b465e521c97cb21161eaf13e1fce6095324a13ee19fd690956e5a0a260",
        "urls": [
          "bzz-raw://62fdabd4e2a7b81220c6bebf79107b777d9eea7fca5ef13e646fec34164765e5",
          "dweb:/ipfs/Qma4a72yiGbRh1Q24fxymnK9UHUJbUopGBCJ1KuWWyjKC6"
        ],
        "license": "CC0-1.0"
      },
      "contracts/interfaces/IERC4671.sol": {
        "keccak256": "0x88261c2f4ed60a27e2eeea2386edccda0182054e6a10b45ffa6dd6ffb33b40a9",
        "urls": [
          "bzz-raw://b221e21fa286e604ae526c335150d183452ce0a47deee0e4817162a6a8211316",
          "dweb:/ipfs/Qme7QQ7opMqtTN53vvBk6CkNBMukSz8zcnDgZ9iiNyxzKS"
        ],
        "license": "CC0-1.0"
      },
      "contracts/interfaces/IERC4671Enumerable.sol": {
        "keccak256": "0x12bed9fdb1d4dfe540f780d154fb1101dcc88e319c81c2be272dcd90f26b6f65",
        "urls": [
          "bzz-raw://f2b878cb592b5cc0f49170a6bf23e4e471d1ee23f400edad6531942ccddd4b55",
          "dweb:/ipfs/Qme2igT58a6ARJp7zNgTEqLZ6sXeVSwSHiU9BNkMH9JwvS"
        ],
        "license": "CC0-1.0"
      },
      "contracts/interfaces/IERC4671Metadata.sol": {
        "keccak256": "0xaaed9686ad72d29c4dfd7ad3ee392873b4e7ea9578473ca7178752b9a10ec5c7",
        "urls": [
          "bzz-raw://5afdee61abb015d785af92b9c6d6615c40596339e3523a8e1561d393aee6ddf1",
          "dweb:/ipfs/QmWjNYJ1zho8uZ3B4tGSQ3ZJ6SNJkbLt3FgL7ZLFhzudNw"
        ],
        "license": "CC0-1.0"
      },
      "lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/openzeppelin-contracts/contracts/utils/Base64.sol": {
        "keccak256": "0x5f3461639fe20794cfb4db4a6d8477388a15b2e70a018043084b7c4bedfa8136",
        "urls": [
          "bzz-raw://77e5309e2cc4cdc3395214edb0ff43ff5a5f7373f5a425383e540f6fab530f96",
          "dweb:/ipfs/QmTV8DZ9knJDa3b5NPBFQqjvTzodyZVjRUg5mx5A99JPLJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xbaa90c891304799f6aa4039eae4b59afc0b59ce3bcc647f3fc2bbf5a04b17f1e",
        "urls": [
          "bzz-raw://1cc3f5b077759f92f28ba4182d9410aa8fd586d7efc5f76bdd22228bf2d227f0",
          "dweb:/ipfs/QmbLPLb31LxAyB7GWir5AssC1TYVHqhBsN6R7APj2UV9fv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xbb9b373ec337797b9f8822171cb191095cb11e729a4fde4c207d25b8b642fb93",
        "urls": [
          "bzz-raw://6fba7f4448f95e3a42fba5305cc02403eee23aa62e742a0ae7bca609bdaf89da",
          "dweb:/ipfs/QmSXV5FapsVemawU9Zzkx3u3DNLhCaS9MnwcZLsPpMSKnz"
        ],
        "license": "MIT"
      },
      "test/Badge.t.sol": {
        "keccak256": "0x7e398466254e39bb96d2e057d8e3119fed4fece476ae22e72e20abadedd0ff7e",
        "urls": [
          "bzz-raw://9c7e5af22f143ca6a9d1d3c8e524f6d8ef7999418f2d0ac63289896b750de0df",
          "dweb:/ipfs/QmdGGjxtvKZm6U8fzUu2NTAGU3PWgn5v994m58LQoBDCXs"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Badge.t.sol",
    "id": 4526,
    "exportedSymbols": {
      "Badge": [
        116
      ],
      "Badgeg_Test": [
        4525
      ],
      "Base64": [
        3368
      ],
      "DSTest": [
        2631
      ],
      "ERC165": [
        3589
      ],
      "ERC4671": [
        730
      ],
      "IERC165": [
        3601
      ],
      "IERC4671": [
        782
      ],
      "IERC4671Enumerable": [
        818
      ],
      "IERC4671Metadata": [
        844
      ],
      "Math": [
        4466
      ],
      "Strings": [
        3565
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:469:16",
    "nodes": [
      {
        "id": 4468,
        "nodeType": "PragmaDirective",
        "src": "0:23:16",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 4469,
        "nodeType": "ImportDirective",
        "src": "25:32:16",
        "absolutePath": "contracts/Badge.sol",
        "file": "../contracts/Badge.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4526,
        "sourceUnit": 117,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4470,
        "nodeType": "ImportDirective",
        "src": "58:37:16",
        "absolutePath": "lib/ds-test/src/test.sol",
        "file": "../lib/ds-test/src/test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4526,
        "sourceUnit": 2632,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4525,
        "nodeType": "ContractDefinition",
        "src": "97:372:16",
        "nodes": [
          {
            "id": 4475,
            "nodeType": "VariableDeclaration",
            "src": "135:11:16",
            "constant": false,
            "mutability": "mutable",
            "name": "badge",
            "nameLocation": "141:5:16",
            "scope": 4525,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Badge_$116",
              "typeString": "contract Badge"
            },
            "typeName": {
              "id": 4474,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4473,
                "name": "Badge",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 116,
                "src": "135:5:16"
              },
              "referencedDeclaration": 116,
              "src": "135:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Badge_$116",
                "typeString": "contract Badge"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 4490,
            "nodeType": "FunctionDefinition",
            "src": "153:111:16",
            "body": {
              "id": 4489,
              "nodeType": "Block",
              "src": "177:87:16",
              "statements": [
                {
                  "expression": {
                    "id": 4487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4478,
                      "name": "badge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4475,
                      "src": "187:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Badge_$116",
                        "typeString": "contract Badge"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "4261646765",
                          "id": 4482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "205:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_84158c627a6abf4fc640954fa4bbf43b9f65de9fe194884865745bece8e26cce",
                            "typeString": "literal_string \"Badge\""
                          },
                          "value": "Badge"
                        },
                        {
                          "hexValue": "4241444745",
                          "id": 4483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "214:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_6dc356d31bf6b8e3949e87ea8632f6059e1394f14d238960c73dd144e0f0e381",
                            "typeString": "literal_string \"BADGE\""
                          },
                          "value": "BADGE"
                        },
                        {
                          "hexValue": "4261646765204e616d65",
                          "id": 4484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "223:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_7d32895433122fa20d2b549ce2e0c3e92cd71bd3da0a5fab9fa538397954e5a4",
                            "typeString": "literal_string \"Badge Name\""
                          },
                          "value": "Badge Name"
                        },
                        {
                          "hexValue": "4261646765204465736372697074696f6e",
                          "id": 4485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "237:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_e4b4a635189cd120096c05942a19fc95e555b025e1d52861b66313eb91fc86a5",
                            "typeString": "literal_string \"Badge Description\""
                          },
                          "value": "Badge Description"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_84158c627a6abf4fc640954fa4bbf43b9f65de9fe194884865745bece8e26cce",
                            "typeString": "literal_string \"Badge\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_6dc356d31bf6b8e3949e87ea8632f6059e1394f14d238960c73dd144e0f0e381",
                            "typeString": "literal_string \"BADGE\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_7d32895433122fa20d2b549ce2e0c3e92cd71bd3da0a5fab9fa538397954e5a4",
                            "typeString": "literal_string \"Badge Name\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_e4b4a635189cd120096c05942a19fc95e555b025e1d52861b66313eb91fc86a5",
                            "typeString": "literal_string \"Badge Description\""
                          }
                        ],
                        "id": 4481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "195:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_Badge_$116_$",
                          "typeString": "function (string memory,string memory,string memory,string memory) returns (contract Badge)"
                        },
                        "typeName": {
                          "id": 4480,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4479,
                            "name": "Badge",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 116,
                            "src": "199:5:16"
                          },
                          "referencedDeclaration": 116,
                          "src": "199:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Badge_$116",
                            "typeString": "contract Badge"
                          }
                        }
                      },
                      "id": 4486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "195:62:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Badge_$116",
                        "typeString": "contract Badge"
                      }
                    },
                    "src": "187:70:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Badge_$116",
                      "typeString": "contract Badge"
                    }
                  },
                  "id": 4488,
                  "nodeType": "ExpressionStatement",
                  "src": "187:70:16"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "162:5:16",
            "parameters": {
              "id": 4476,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "167:2:16"
            },
            "returnParameters": {
              "id": 4477,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "177:0:16"
            },
            "scope": 4525,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4524,
            "nodeType": "FunctionDefinition",
            "src": "270:197:16",
            "body": {
              "id": 4523,
              "nodeType": "Block",
              "src": "297:170:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4498,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "326:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Badgeg_Test_$4525",
                              "typeString": "contract Badgeg_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Badgeg_Test_$4525",
                              "typeString": "contract Badgeg_Test"
                            }
                          ],
                          "id": 4497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "318:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4496,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "318:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "318:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 4500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "333:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 4493,
                        "name": "badge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4475,
                        "src": "307:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Badge_$116",
                          "typeString": "contract Badge"
                        }
                      },
                      "id": 4495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80,
                      "src": "307:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 4501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "307:28:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4502,
                  "nodeType": "ExpressionStatement",
                  "src": "307:28:16"
                },
                {
                  "assignments": [
                    4504
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4504,
                      "mutability": "mutable",
                      "name": "bal",
                      "nameLocation": "353:3:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 4523,
                      "src": "345:11:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4503,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "345:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4512,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4509,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "383:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Badgeg_Test_$4525",
                              "typeString": "contract Badgeg_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Badgeg_Test_$4525",
                              "typeString": "contract Badgeg_Test"
                            }
                          ],
                          "id": 4508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "375:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4507,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "375:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "375:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4505,
                        "name": "badge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4475,
                        "src": "359:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Badge_$116",
                          "typeString": "contract Badge"
                        }
                      },
                      "id": 4506,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 204,
                      "src": "359:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 4511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "359:30:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "345:44:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4514,
                        "name": "bal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4504,
                        "src": "408:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 4515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "413:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 4513,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1165,
                        1190,
                        1220,
                        1245,
                        1304,
                        1329,
                        1359,
                        1384,
                        2484,
                        2519
                      ],
                      "referencedDeclaration": 1359,
                      "src": "399:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 4516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "399:16:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4517,
                  "nodeType": "ExpressionStatement",
                  "src": "399:16:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "42616c616e6365",
                        "id": 4519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "445:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_545608d0a01d2b02351975382c359965b0d9b259ce065eb8c064f439aa519305",
                          "typeString": "literal_string \"Balance\""
                        },
                        "value": "Balance"
                      },
                      {
                        "id": 4520,
                        "name": "bal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4504,
                        "src": "456:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_545608d0a01d2b02351975382c359965b0d9b259ce065eb8c064f439aa519305",
                          "typeString": "literal_string \"Balance\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4518,
                      "name": "log_named_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 918,
                      "src": "430:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 4521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "430:30:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4522,
                  "nodeType": "EmitStatement",
                  "src": "425:35:16"
                }
              ]
            },
            "functionSelector": "9642ddaf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMint",
            "nameLocation": "279:8:16",
            "parameters": {
              "id": 4491,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "287:2:16"
            },
            "returnParameters": {
              "id": 4492,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "297:0:16"
            },
            "scope": 4525,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4471,
              "name": "DSTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2631,
              "src": "121:6:16"
            },
            "id": 4472,
            "nodeType": "InheritanceSpecifier",
            "src": "121:6:16"
          }
        ],
        "canonicalName": "Badgeg_Test",
        "contractDependencies": [
          116
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          4525,
          2631
        ],
        "name": "Badgeg_Test",
        "nameLocation": "106:11:16",
        "scope": 4526,
        "usedErrors": []
      }
    ]
  },
  "id": 16
}