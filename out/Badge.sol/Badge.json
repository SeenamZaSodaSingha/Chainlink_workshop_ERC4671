{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_badgeName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_badgeDescription",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "toeknId",
          "type": "uint256"
        }
      ],
      "name": "MintToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Revoked",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "emittedCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "hasValid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "holdersCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isUserMinted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "isValid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "166:1195:0:-:0;;;379:227;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1332:13:1;;502:5:0;;509:7;;1332:13:1;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1356:17:1;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;1384:8:1;:21;;-1:-1:-1;;;;;;1384:21:1;1395:10;1384:21;;;-1:-1:-1;529:22:0;;::::1;::::0;:9:::1;::::0;:22:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;562:36:0;;::::1;::::0;:16:::1;::::0;:36:::1;::::0;::::1;::::0;::::1;:::i;:::-;;379:227:::0;;;;166:1195;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;166:1195:0;;;-1:-1:-1;166:1195:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:18;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:18;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:18;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:18:o;1036:971::-;1173:6;1181;1189;1197;1250:3;1238:9;1229:7;1225:23;1221:33;1218:53;;;1267:1;1264;1257:12;1218:53;1294:16;;-1:-1:-1;;;;;1359:14:18;;;1356:34;;;1386:1;1383;1376:12;1356:34;1409:61;1462:7;1453:6;1442:9;1438:22;1409:61;:::i;:::-;1399:71;;1516:2;1505:9;1501:18;1495:25;1479:41;;1545:2;1535:8;1532:16;1529:36;;;1561:1;1558;1551:12;1529:36;1584:63;1639:7;1628:8;1617:9;1613:24;1584:63;:::i;:::-;1574:73;;1693:2;1682:9;1678:18;1672:25;1656:41;;1722:2;1712:8;1709:16;1706:36;;;1738:1;1735;1728:12;1706:36;1761:63;1816:7;1805:8;1794:9;1790:24;1761:63;:::i;:::-;1751:73;;1870:2;1859:9;1855:18;1849:25;1833:41;;1899:2;1889:8;1886:16;1883:36;;;1915:1;1912;1905:12;1883:36;;1938:63;1993:7;1982:8;1971:9;1967:24;1938:63;:::i;:::-;1928:73;;;1036:971;;;;;;;:::o;2012:380::-;2091:1;2087:12;;;;2134;;;2155:61;;2209:4;2201:6;2197:17;2187:27;;2155:61;2262:2;2254:6;2251:14;2231:18;2228:38;2225:161;;;2308:10;2303:3;2299:20;2296:1;2289:31;2343:4;2340:1;2333:15;2371:4;2368:1;2361:15;2225:161;;2012:380;;;:::o;:::-;166:1195:0;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c57806395d89b411161006657806395d89b41146101fe578063b708f2fa14610206578063c87b56dd14610229578063f577a5001461023c57600080fd5b80636352211e146101a25780636b4ed21b146101cd57806370a08231146101d557600080fd5b80632f745c59116100c85780632f745c591461013e57806340c10f191461015157806343945512146101665780634f6ccce71461019157600080fd5b806301ffc9a7146100ef57806306fdde031461011757806326019c181461012c575b600080fd5b6101026100fd3660046108d7565b61024f565b60405190151581526020015b60405180910390f35b61011f6102bc565b60405161010e9190610938565b6006545b60405190815260200161010e565b61013061014c366004610987565b61034e565b61016461015f366004610987565b6103d8565b005b6101026101743660046109b1565b6001600160a01b0316600090815260036020526040902054151590565b61013061019f3660046109cc565b90565b6101b56101b03660046109cc565b610494565b6040516001600160a01b03909116815260200161010e565b600754610130565b6101306101e33660046109b1565b6001600160a01b031660009081526001602052604090205490565b61011f6104b2565b6101026102143660046109b1565b600b6020526000908152604090205460ff1681565b61011f6102373660046109cc565b6104c1565b61010261024a3660046109cc565b61051b565b60006001600160e01b0319821663a511533d60e01b148061028057506001600160e01b03198216635b5e139f60e01b145b8061029b57506001600160e01b03198216632d57debd60e01b145b806102b657506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600480546102cb906109e5565b80601f01602080910402602001604051908101604052809291908181526020018280546102f7906109e5565b80156103445780601f1061031957610100808354040283529160200191610344565b820191906000526020600020905b81548152906001019060200180831161032757829003601f168201915b5050505050905090565b6001600160a01b0382166000908152600160205260408120805483106103b25760405162461bcd60e51b8152602060048201526014602482015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b60448201526064015b60405180910390fd5b8083815481106103c4576103c4610a20565b906000526020600020015491505092915050565b336000908152600b602052604090205460ff161561042e5760405162461bcd60e51b8152602060048201526013602482015272155cd95c88185b1c9958591e481b5a5b9d1959606a1b60448201526064016103a9565b60006104393361053a565b336000818152600b6020908152604091829020805460ff19166001179055815192835282018390529192507fdcdea898caf5576419f89caf69301592a4758349a0bd62300b58849213420a72910160405180910390a1505050565b600061049f826105a9565b600101546001600160a01b031692915050565b6060600580546102cb906109e5565b606060006009600a6040516020016104da929190610ad0565b60405160208183030381529060405290506104f481610608565b6040516020016105049190610b43565b604051602081830303815290604052915050919050565b6000610526826105a9565b60010154600160a01b900460ff1692915050565b6006546105498282600161075c565b604080516001600160a01b0384168152602081018390527f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe910160405180910390a160016006600082825461059e9190610b9e565b909155509092915050565b600081815260208190526040812060018101546001600160a01b03166102b65760405162461bcd60e51b8152602060048201526014602482015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b60448201526064016103a9565b606081516000141561062857505060408051602081019091526000815290565b6000604051806060016040528060408152602001610c0e60409139905060006003845160026106579190610b9e565b6106619190610bb6565b61066c906004610bd8565b67ffffffffffffffff81111561068457610684610bf7565b6040519080825280601f01601f1916602001820160405280156106ae576020820181803683370190505b509050600182016020820185865187015b8082101561071a576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f81168501518453506001830192506106bf565b5050600386510660018114610736576002811461074957610751565b603d6001830353603d6002830353610751565b603d60018303535b509195945050505050565b6000828152602081905260409020600101546001600160a01b0316156107c45760405162461bcd60e51b815260206004820152601d60248201527f43616e6e6f74206d696e7420616e2061737369676e656420746f6b656e00000060448201526064016103a9565b6001600160a01b0383166000908152600160205260409020546107fa576001600760008282546107f49190610b9e565b90915550505b604080516060810182523381526001600160a01b0385811660208084018281528615801586880190815260008a8152808552888120975188549088166001600160a01b031990911617885592516001978801805492511515600160a01b026001600160a81b031990931691909716171790945591825283815284822080546002835286842089855283529583208690558482529385018455928152919091209091018390556108d2576001600160a01b03831660009081526003602052604081208054600192906108cc908490610b9e565b90915550505b505050565b6000602082840312156108e957600080fd5b81356001600160e01b03198116811461090157600080fd5b9392505050565b60005b8381101561092357818101518382015260200161090b565b83811115610932576000848401525b50505050565b6020815260008251806020840152610957816040850160208701610908565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461098257600080fd5b919050565b6000806040838503121561099a57600080fd5b6109a38361096b565b946020939093013593505050565b6000602082840312156109c357600080fd5b6109018261096b565b6000602082840312156109de57600080fd5b5035919050565b600181811c908216806109f957607f821691505b60208210811415610a1a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b8054600090600181811c9080831680610a5057607f831692505b6020808410821415610a7257634e487b7160e01b600052602260045260246000fd5b818015610a865760018114610a9757610ac4565b60ff19861689528489019650610ac4565b60008881526020902060005b86811015610abc5781548b820152908501908301610aa3565b505084890196505b50505050505092915050565b607b60f81b815268113730b6b2911d101160b91b60018201526000610af8600a830185610a36565b61088b60f21b81526f113232b9b1b934b83a34b7b7111d101160811b6002820152610b266012820185610a36565b601160f91b8152607d60f81b600182015260020195945050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000815260008251610b7b81601d850160208701610908565b91909101601d0192915050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610bb157610bb1610b88565b500190565b600082610bd357634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610bf257610bf2610b88565b500290565b634e487b7160e01b600052604160045260246000fdfe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa2646970667358221220dd4b30b03b65d7d4fe6e00410f683e526039e4a06bc591f1c09f4e1ededab81964736f6c63430008090033",
    "sourceMap": "166:1195:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4651:376:1;;;;;;:::i;:::-;;:::i;:::-;;;470:14:18;;463:22;445:41;;433:2;418:18;4651:376:1;;;;;;;;2732:100;;;:::i;:::-;;;;;;;:::i;3612:102::-;3693:13;;3612:102;;;1294:25:18;;;1282:2;1267:18;3612:102:1;1148:177:18;4106:262:1;;;;;;:::i;:::-;;:::i;614::0:-;;;;;;:::i;:::-;;:::i;:::-;;2525:134:1;;;;;;:::i;:::-;-1:-1:-1;;;;;2620:27:1;2596:4;2620:27;;;:20;:27;;;;;;:31;;;2525:134;4528:115;;;;;;:::i;:::-;4630:5;4528:115;1869:139;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2307:32:18;;;2289:51;;2277:2;2262:18;1869:139:1;2143:203:18;3778:102:1;3859:13;;3778:102;;1587:137;;;;;;:::i;:::-;-1:-1:-1;;;;;1686:23:1;1659:7;1686:23;;;:16;:23;;;;;:30;;1587:137;2908:104;;;:::i;269:45:0:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;884:474;;;;;;:::i;:::-;;:::i;2179:136:1:-;;;;;;:::i;:::-;;:::i;4651:376::-;4753:4;-1:-1:-1;;;;;;4791:41:1;;-1:-1:-1;;;4791:41:1;;:107;;-1:-1:-1;;;;;;;4849:49:1;;-1:-1:-1;;;4849:49:1;4791:107;:175;;;-1:-1:-1;;;;;;;4915:51:1;;-1:-1:-1;;;4915:51:1;4791:175;:228;;;-1:-1:-1;;;;;;;;;;937:40:13;;;4983:36:1;4770:249;4651:376;-1:-1:-1;;4651:376:1:o;2732:100::-;2786:13;2819:5;2812:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2732:100;:::o;4106:262::-;-1:-1:-1;;;;;4247:23:1;;4203:7;4247:23;;;:16;:23;;;;;4297:10;;4289:18;;4281:51;;;;-1:-1:-1;;;4281:51:1;;2938:2:18;4281:51:1;;;2920:21:18;2977:2;2957:18;;;2950:30;-1:-1:-1;;;2996:18:18;;;2989:50;3056:18;;4281:51:1;;;;;;;;;4350:3;4354:5;4350:10;;;;;;;;:::i;:::-;;;;;;;;;4343:17;;;4106:262;;;;:::o;614::0:-;699:10;686:24;;;;:12;:24;;;;;;;;685:25;677:57;;;;-1:-1:-1;;;677:57:0;;3419:2:18;677:57:0;;;3401:21:18;3458:2;3438:18;;;3431:30;-1:-1:-1;;;3477:18:18;;;3470:49;3536:18;;677:57:0;3217:343:18;677:57:0;745:15;763:17;769:10;763:5;:17::i;:::-;804:10;791:24;;;;:12;:24;;;;;;;;;:31;;-1:-1:-1;;791:31:0;818:4;791:31;;;838:30;;3739:51:18;;;3806:18;;3799:34;;;;;-1:-1:-1;838:30:0;;3712:18:18;838:30:0;;;;;;;666:210;614:262;;:::o;1869:139:1:-;1941:7;1968:26;1986:7;1968:17;:26::i;:::-;:32;;;-1:-1:-1;;;;;1968:32:1;;1869:139;-1:-1:-1;;1869:139:1:o;2908:104::-;2964:13;2997:7;2990:14;;;;;:::i;884:474:0:-;957:13;983:20;1072:9;1126:16;1006:170;;;;;;;;;:::i;:::-;;;;;;;;;;;;;983:193;;1302:22;1316:7;1302:13;:22::i;:::-;1217:122;;;;;;;;:::i;:::-;;;;;;;;;;;;;1189:161;;;884:474;;;:::o;2179:136:1:-;2251:4;2275:26;2293:7;2275:17;:26::i;:::-;:32;;;-1:-1:-1;;;2275:32:1;;;;;;-1:-1:-1;;2179:136:1:o;5839:226::-;5933:13;;5957:33;5969:5;5933:13;5985:4;5957:11;:33::i;:::-;6006:22;;;-1:-1:-1;;;;;3757:32:18;;3739:51;;3821:2;3806:18;;3799:34;;;6006:22:1;;3712:18:18;6006:22:1;;;;;;;6056:1;6039:13;;:18;;;;;;;:::i;:::-;;;;-1:-1:-1;5839:226:1;;;-1:-1:-1;;5839:226:1:o;7182:239::-;7257:13;7305:16;;;;;;;;;;7340:11;;;;-1:-1:-1;;;;;7340:11:1;7332:58;;;;-1:-1:-1;;;7332:58:1;;2938:2:18;7332:58:1;;;2920:21:18;2977:2;2957:18;;;2950:30;-1:-1:-1;;;2996:18:18;;;2989:50;3056:18;;7332:58:1;2736:344:18;505:3026:10;563:13;795:4;:11;810:1;795:16;791:31;;;-1:-1:-1;;813:9:10;;;;;;;;;-1:-1:-1;813:9:10;;;505:3026::o;791:31::-;872:19;894:6;;;;;;;;;;;;;;;;;872:28;;1303:20;1362:1;1343:4;:11;1357:1;1343:15;;;;:::i;:::-;1342:21;;;;:::i;:::-;1337:27;;:1;:27;:::i;:::-;1326:39;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1326:39:10;;1303:62;;1540:1;1533:5;1529:13;1641:2;1633:6;1629:15;1748:4;1799;1793:11;1787:4;1783:22;1711:1403;1832:6;1823:7;1820:19;1711:1403;;;1934:1;1925:7;1921:15;1910:26;;1972:7;1966:14;2615:4;2607:5;2603:2;2599:14;2595:25;2585:8;2581:40;2575:47;2564:9;2556:67;2668:1;2657:9;2653:17;2640:30;;2758:4;2750:5;2746:2;2742:14;2738:25;2728:8;2724:40;2718:47;2707:9;2699:67;2811:1;2800:9;2796:17;2783:30;;2900:4;2892:5;2889:1;2885:13;2881:24;2871:8;2867:39;2861:46;2850:9;2842:66;2953:1;2942:9;2938:17;2925:30;;3034:4;3027:5;3023:16;3013:8;3009:31;3003:38;2992:9;2984:58;;3087:1;3076:9;3072:17;3059:30;;1711:1403;;;1715:104;;3272:1;3265:4;3259:11;3255:19;3292:1;3287:120;;;;3425:1;3420:71;;;;3248:243;;3287:120;3339:4;3335:1;3324:9;3320:17;3312:32;3388:4;3384:1;3373:9;3369:17;3361:32;3287:120;;3420:71;3472:4;3468:1;3457:9;3453:17;3445:32;3248:243;-1:-1:-1;3518:6:10;;505:3026;-1:-1:-1;;;;;505:3026:10:o;6304:529:1:-;6431:1;6397:16;;;;;;;;;;:22;;;-1:-1:-1;;;;;6397:22:1;:36;6389:78;;;;-1:-1:-1;;;6389:78:1;;7609:2:18;6389:78:1;;;7591:21:18;7648:2;7628:18;;;7621:30;7687:31;7667:18;;;7660:59;7736:18;;6389:78:1;7407:353:18;6389:78:1;-1:-1:-1;;;;;6482:23:1;;;;;;:16;:23;;;;;:30;6478:86;;6551:1;6534:13;;:18;;;;;;;:::i;:::-;;;;-1:-1:-1;;6478:86:1;6593:31;;;;;;;;6599:10;6593:31;;-1:-1:-1;;;;;6593:31:1;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6574:16:1;;;;;;;;;:50;;;;;;;-1:-1:-1;;;;;;6574:50:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6574:50:1;-1:-1:-1;;;;;;6574:50:1;;;;;;;;;;;;6667:23;;;;;;;;;:30;;6635:13;:20;;;;;:29;;;;;;;;:62;;;6708:23;;;:37;;;;;;;;;;;;;;;;;;6756:70;;-1:-1:-1;;;;;6782:27:1;;;;;;:20;:27;;;;;:32;;6813:1;;6782:27;:32;;6813:1;;6782:32;:::i;:::-;;;;-1:-1:-1;;6756:70:1;6304:529;;;:::o;14:286:18:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:18;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:18:o;497:258::-;569:1;579:113;593:6;590:1;587:13;579:113;;;669:11;;;663:18;650:11;;;643:39;615:2;608:10;579:113;;;710:6;707:1;704:13;701:48;;;745:1;736:6;731:3;727:16;720:27;701:48;;497:258;;;:::o;760:383::-;909:2;898:9;891:21;872:4;941:6;935:13;984:6;979:2;968:9;964:18;957:34;1000:66;1059:6;1054:2;1043:9;1039:18;1034:2;1026:6;1022:15;1000:66;:::i;:::-;1127:2;1106:15;-1:-1:-1;;1102:29:18;1087:45;;;;1134:2;1083:54;;760:383;-1:-1:-1;;760:383:18:o;1330:173::-;1398:20;;-1:-1:-1;;;;;1447:31:18;;1437:42;;1427:70;;1493:1;1490;1483:12;1427:70;1330:173;;;:::o;1508:254::-;1576:6;1584;1637:2;1625:9;1616:7;1612:23;1608:32;1605:52;;;1653:1;1650;1643:12;1605:52;1676:29;1695:9;1676:29;:::i;:::-;1666:39;1752:2;1737:18;;;;1724:32;;-1:-1:-1;;;1508:254:18:o;1767:186::-;1826:6;1879:2;1867:9;1858:7;1854:23;1850:32;1847:52;;;1895:1;1892;1885:12;1847:52;1918:29;1937:9;1918:29;:::i;1958:180::-;2017:6;2070:2;2058:9;2049:7;2045:23;2041:32;2038:52;;;2086:1;2083;2076:12;2038:52;-1:-1:-1;2109:23:18;;1958:180;-1:-1:-1;1958:180:18:o;2351:380::-;2430:1;2426:12;;;;2473;;;2494:61;;2548:4;2540:6;2536:17;2526:27;;2494:61;2601:2;2593:6;2590:14;2570:18;2567:38;2564:161;;;2647:10;2642:3;2638:20;2635:1;2628:31;2682:4;2679:1;2672:15;2710:4;2707:1;2700:15;2564:161;;2351:380;;;:::o;3085:127::-;3146:10;3141:3;3137:20;3134:1;3127:31;3177:4;3174:1;3167:15;3201:4;3198:1;3191:15;3970:973;4055:12;;4020:3;;4110:1;4130:18;;;;4183;;;;4210:61;;4264:4;4256:6;4252:17;4242:27;;4210:61;4290:2;4338;4330:6;4327:14;4307:18;4304:38;4301:161;;;4384:10;4379:3;4375:20;4372:1;4365:31;4419:4;4416:1;4409:15;4447:4;4444:1;4437:15;4301:161;4478:18;4505:104;;;;4623:1;4618:319;;;;4471:466;;4505:104;-1:-1:-1;;4538:24:18;;4526:37;;4583:16;;;;-1:-1:-1;4505:104:18;;4618:319;3917:1;3910:14;;;3954:4;3941:18;;4712:1;4726:165;4740:6;4737:1;4734:13;4726:165;;;4818:14;;4805:11;;;4798:35;4861:16;;;;4755:10;;4726:165;;;4730:3;;4920:6;4915:3;4911:16;4904:23;;4471:466;;;;;;;3970:973;;;;:::o;4948:1209::-;-1:-1:-1;;;5745:16:18;;-1:-1:-1;;;5786:1:18;5777:11;;5770:51;-1:-1:-1;5840:47:18;5883:2;5874:12;;5866:6;5840:47;:::i;:::-;-1:-1:-1;;;5896:26:18;;-1:-1:-1;;;5946:1:18;5938:10;;5931:64;6014:46;6056:2;6048:11;;6040:6;6014:46;:::i;:::-;-1:-1:-1;;;6069:24:18;;-1:-1:-1;;;6117:1:18;6109:10;;6102:23;6149:1;6141:10;;4948:1209;-1:-1:-1;;;;;4948:1209:18:o;6162:448::-;6424:31;6419:3;6412:44;6394:3;6485:6;6479:13;6501:62;6556:6;6551:2;6546:3;6542:12;6535:4;6527:6;6523:17;6501:62;:::i;:::-;6583:16;;;;6601:2;6579:25;;6162:448;-1:-1:-1;;6162:448:18:o;6615:127::-;6676:10;6671:3;6667:20;6664:1;6657:31;6707:4;6704:1;6697:15;6731:4;6728:1;6721:15;6747:128;6787:3;6818:1;6814:6;6811:1;6808:13;6805:39;;;6824:18;;:::i;:::-;-1:-1:-1;6860:9:18;;6747:128::o;6880:217::-;6920:1;6946;6936:132;;6990:10;6985:3;6981:20;6978:1;6971:31;7025:4;7022:1;7015:15;7053:4;7050:1;7043:15;6936:132;-1:-1:-1;7082:9:18;;6880:217::o;7102:168::-;7142:7;7208:1;7204;7200:6;7196:14;7193:1;7190:21;7185:1;7178:9;7171:17;7167:45;7164:71;;;7215:18;;:::i;:::-;-1:-1:-1;7255:9:18;;7102:168::o;7275:127::-;7336:10;7331:3;7327:20;7324:1;7317:31;7367:4;7364:1;7357:15;7391:4;7388:1;7381:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "balanceOf(address)": "70a08231",
    "emittedCount()": "26019c18",
    "hasValid(address)": "43945512",
    "holdersCount()": "6b4ed21b",
    "isUserMinted(address)": "b708f2fa",
    "isValid(uint256)": "f577a500",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "ownerOf(uint256)": "6352211e",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenByIndex(uint256)": "4f6ccce7",
    "tokenOfOwnerByIndex(address,uint256)": "2f745c59",
    "tokenURI(uint256)": "c87b56dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_badgeName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_badgeDescription\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toeknId\",\"type\":\"uint256\"}],\"name\":\"MintToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Revoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emittedCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"hasValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"holdersCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isUserMinted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"isValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address)\":{\"params\":{\"owner\":\"Address for whom to query the balance\"},\"returns\":{\"_0\":\"Number of tokens owned by `owner`\"}},\"emittedCount()\":{\"returns\":{\"_0\":\"emittedCount Number of tokens emitted\"}},\"hasValid(address)\":{\"params\":{\"owner\":\"Address for whom to check the ownership\"},\"returns\":{\"_0\":\"True if `owner` has a valid token, false otherwise\"}},\"holdersCount()\":{\"returns\":{\"_0\":\"holdersCount Number of token holders  \"}},\"isValid(uint256)\":{\"params\":{\"tokenId\":\"Identifier of the token\"},\"returns\":{\"_0\":\"True if the token is valid, false otherwise\"}},\"name()\":{\"returns\":{\"_0\":\"Descriptive name of the tokens in this contract\"}},\"ownerOf(uint256)\":{\"params\":{\"tokenId\":\"Identifier of the token\"},\"returns\":{\"_0\":\"Address of the owner of `tokenId`\"}},\"symbol()\":{\"returns\":{\"_0\":\"An abbreviated name of the tokens in this contract\"}},\"tokenByIndex(uint256)\":{\"params\":{\"index\":\"Index of the token\"},\"returns\":{\"_0\":\"tokenId of the token\"}},\"tokenOfOwnerByIndex(address,uint256)\":{\"params\":{\"index\":\"Index of the token\",\"owner\":\"Address for whom to get the token\"},\"returns\":{\"_0\":\"tokenId of the token\"}},\"tokenURI(uint256)\":{\"params\":{\"tokenId\":\"Identifier of the token\"},\"returns\":{\"_0\":\"URI for the token\"}}},\"version\":1},\"userdoc\":{\"events\":{\"Minted(address,uint256)\":{\"notice\":\"Event emitted when a token `tokenId` is minted for `owner`\"},\"Revoked(address,uint256)\":{\"notice\":\"Event emitted when token `tokenId` of `owner` is revoked\"}},\"kind\":\"user\",\"methods\":{\"balanceOf(address)\":{\"notice\":\"Count all tokens assigned to an owner\"},\"hasValid(address)\":{\"notice\":\"Check if an address owns a valid token in the contract\"},\"isValid(uint256)\":{\"notice\":\"Check if a token hasn't been revoked\"},\"ownerOf(uint256)\":{\"notice\":\"Get owner of a token\"},\"tokenByIndex(uint256)\":{\"notice\":\"Get a tokenId by it's index, where 0 <= index < total()\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"notice\":\"Get the tokenId of a token using its position in the owner's list\"},\"tokenURI(uint256)\":{\"notice\":\"URI to query to get the token's metadata\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Badge.sol\":\"Badge\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"contracts/Badge.sol\":{\"keccak256\":\"0x71c8cb9c9fd9288e5a610975cd3c82532b289042e18838042f5b652a127adfa9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1a6abac2deb4d69eb53a9971e3c788cf0f9975fdf6f0c61fe8e830a7cfbfd41\",\"dweb:/ipfs/QmZvUYx9GARHrkfjGQnSJ1WFsAwJpzgXusqp55Ga7Vd3RV\"]},\"contracts/ERC4671.sol\":{\"keccak256\":\"0xf81a75b465e521c97cb21161eaf13e1fce6095324a13ee19fd690956e5a0a260\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://62fdabd4e2a7b81220c6bebf79107b777d9eea7fca5ef13e646fec34164765e5\",\"dweb:/ipfs/Qma4a72yiGbRh1Q24fxymnK9UHUJbUopGBCJ1KuWWyjKC6\"]},\"contracts/interfaces/IERC4671.sol\":{\"keccak256\":\"0x88261c2f4ed60a27e2eeea2386edccda0182054e6a10b45ffa6dd6ffb33b40a9\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://b221e21fa286e604ae526c335150d183452ce0a47deee0e4817162a6a8211316\",\"dweb:/ipfs/Qme7QQ7opMqtTN53vvBk6CkNBMukSz8zcnDgZ9iiNyxzKS\"]},\"contracts/interfaces/IERC4671Enumerable.sol\":{\"keccak256\":\"0x12bed9fdb1d4dfe540f780d154fb1101dcc88e319c81c2be272dcd90f26b6f65\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://f2b878cb592b5cc0f49170a6bf23e4e471d1ee23f400edad6531942ccddd4b55\",\"dweb:/ipfs/Qme2igT58a6ARJp7zNgTEqLZ6sXeVSwSHiU9BNkMH9JwvS\"]},\"contracts/interfaces/IERC4671Metadata.sol\":{\"keccak256\":\"0xaaed9686ad72d29c4dfd7ad3ee392873b4e7ea9578473ca7178752b9a10ec5c7\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://5afdee61abb015d785af92b9c6d6615c40596339e3523a8e1561d393aee6ddf1\",\"dweb:/ipfs/QmWjNYJ1zho8uZ3B4tGSQ3ZJ6SNJkbLt3FgL7ZLFhzudNw\"]},\"lib/openzeppelin-contracts/contracts/utils/Base64.sol\":{\"keccak256\":\"0x5f3461639fe20794cfb4db4a6d8477388a15b2e70a018043084b7c4bedfa8136\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77e5309e2cc4cdc3395214edb0ff43ff5a5f7373f5a425383e540f6fab530f96\",\"dweb:/ipfs/QmTV8DZ9knJDa3b5NPBFQqjvTzodyZVjRUg5mx5A99JPLJ\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xbaa90c891304799f6aa4039eae4b59afc0b59ce3bcc647f3fc2bbf5a04b17f1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1cc3f5b077759f92f28ba4182d9410aa8fd586d7efc5f76bdd22228bf2d227f0\",\"dweb:/ipfs/QmbLPLb31LxAyB7GWir5AssC1TYVHqhBsN6R7APj2UV9fv\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xbb9b373ec337797b9f8822171cb191095cb11e729a4fde4c207d25b8b642fb93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6fba7f4448f95e3a42fba5305cc02403eee23aa62e742a0ae7bca609bdaf89da\",\"dweb:/ipfs/QmSXV5FapsVemawU9Zzkx3u3DNLhCaS9MnwcZLsPpMSKnz\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.9+commit.e5eed63a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_badgeName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_badgeDescription",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "toeknId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MintToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Minted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Revoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "emittedCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasValid",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "holdersCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isUserMinted",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isValid",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenByIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenOfOwnerByIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "balanceOf(address)": {
            "params": {
              "owner": "Address for whom to query the balance"
            },
            "returns": {
              "_0": "Number of tokens owned by `owner`"
            }
          },
          "emittedCount()": {
            "returns": {
              "_0": "emittedCount Number of tokens emitted"
            }
          },
          "hasValid(address)": {
            "params": {
              "owner": "Address for whom to check the ownership"
            },
            "returns": {
              "_0": "True if `owner` has a valid token, false otherwise"
            }
          },
          "holdersCount()": {
            "returns": {
              "_0": "holdersCount Number of token holders  "
            }
          },
          "isValid(uint256)": {
            "params": {
              "tokenId": "Identifier of the token"
            },
            "returns": {
              "_0": "True if the token is valid, false otherwise"
            }
          },
          "name()": {
            "returns": {
              "_0": "Descriptive name of the tokens in this contract"
            }
          },
          "ownerOf(uint256)": {
            "params": {
              "tokenId": "Identifier of the token"
            },
            "returns": {
              "_0": "Address of the owner of `tokenId`"
            }
          },
          "symbol()": {
            "returns": {
              "_0": "An abbreviated name of the tokens in this contract"
            }
          },
          "tokenByIndex(uint256)": {
            "params": {
              "index": "Index of the token"
            },
            "returns": {
              "_0": "tokenId of the token"
            }
          },
          "tokenOfOwnerByIndex(address,uint256)": {
            "params": {
              "index": "Index of the token",
              "owner": "Address for whom to get the token"
            },
            "returns": {
              "_0": "tokenId of the token"
            }
          },
          "tokenURI(uint256)": {
            "params": {
              "tokenId": "Identifier of the token"
            },
            "returns": {
              "_0": "URI for the token"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "balanceOf(address)": {
            "notice": "Count all tokens assigned to an owner"
          },
          "hasValid(address)": {
            "notice": "Check if an address owns a valid token in the contract"
          },
          "isValid(uint256)": {
            "notice": "Check if a token hasn't been revoked"
          },
          "ownerOf(uint256)": {
            "notice": "Get owner of a token"
          },
          "tokenByIndex(uint256)": {
            "notice": "Get a tokenId by it's index, where 0 <= index < total()"
          },
          "tokenOfOwnerByIndex(address,uint256)": {
            "notice": "Get the tokenId of a token using its position in the owner's list"
          },
          "tokenURI(uint256)": {
            "notice": "URI to query to get the token's metadata"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/Badge.sol": "Badge"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/Badge.sol": {
        "keccak256": "0x71c8cb9c9fd9288e5a610975cd3c82532b289042e18838042f5b652a127adfa9",
        "urls": [
          "bzz-raw://e1a6abac2deb4d69eb53a9971e3c788cf0f9975fdf6f0c61fe8e830a7cfbfd41",
          "dweb:/ipfs/QmZvUYx9GARHrkfjGQnSJ1WFsAwJpzgXusqp55Ga7Vd3RV"
        ],
        "license": "MIT"
      },
      "contracts/ERC4671.sol": {
        "keccak256": "0xf81a75b465e521c97cb21161eaf13e1fce6095324a13ee19fd690956e5a0a260",
        "urls": [
          "bzz-raw://62fdabd4e2a7b81220c6bebf79107b777d9eea7fca5ef13e646fec34164765e5",
          "dweb:/ipfs/Qma4a72yiGbRh1Q24fxymnK9UHUJbUopGBCJ1KuWWyjKC6"
        ],
        "license": "CC0-1.0"
      },
      "contracts/interfaces/IERC4671.sol": {
        "keccak256": "0x88261c2f4ed60a27e2eeea2386edccda0182054e6a10b45ffa6dd6ffb33b40a9",
        "urls": [
          "bzz-raw://b221e21fa286e604ae526c335150d183452ce0a47deee0e4817162a6a8211316",
          "dweb:/ipfs/Qme7QQ7opMqtTN53vvBk6CkNBMukSz8zcnDgZ9iiNyxzKS"
        ],
        "license": "CC0-1.0"
      },
      "contracts/interfaces/IERC4671Enumerable.sol": {
        "keccak256": "0x12bed9fdb1d4dfe540f780d154fb1101dcc88e319c81c2be272dcd90f26b6f65",
        "urls": [
          "bzz-raw://f2b878cb592b5cc0f49170a6bf23e4e471d1ee23f400edad6531942ccddd4b55",
          "dweb:/ipfs/Qme2igT58a6ARJp7zNgTEqLZ6sXeVSwSHiU9BNkMH9JwvS"
        ],
        "license": "CC0-1.0"
      },
      "contracts/interfaces/IERC4671Metadata.sol": {
        "keccak256": "0xaaed9686ad72d29c4dfd7ad3ee392873b4e7ea9578473ca7178752b9a10ec5c7",
        "urls": [
          "bzz-raw://5afdee61abb015d785af92b9c6d6615c40596339e3523a8e1561d393aee6ddf1",
          "dweb:/ipfs/QmWjNYJ1zho8uZ3B4tGSQ3ZJ6SNJkbLt3FgL7ZLFhzudNw"
        ],
        "license": "CC0-1.0"
      },
      "lib/openzeppelin-contracts/contracts/utils/Base64.sol": {
        "keccak256": "0x5f3461639fe20794cfb4db4a6d8477388a15b2e70a018043084b7c4bedfa8136",
        "urls": [
          "bzz-raw://77e5309e2cc4cdc3395214edb0ff43ff5a5f7373f5a425383e540f6fab530f96",
          "dweb:/ipfs/QmTV8DZ9knJDa3b5NPBFQqjvTzodyZVjRUg5mx5A99JPLJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xbaa90c891304799f6aa4039eae4b59afc0b59ce3bcc647f3fc2bbf5a04b17f1e",
        "urls": [
          "bzz-raw://1cc3f5b077759f92f28ba4182d9410aa8fd586d7efc5f76bdd22228bf2d227f0",
          "dweb:/ipfs/QmbLPLb31LxAyB7GWir5AssC1TYVHqhBsN6R7APj2UV9fv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xbb9b373ec337797b9f8822171cb191095cb11e729a4fde4c207d25b8b642fb93",
        "urls": [
          "bzz-raw://6fba7f4448f95e3a42fba5305cc02403eee23aa62e742a0ae7bca609bdaf89da",
          "dweb:/ipfs/QmSXV5FapsVemawU9Zzkx3u3DNLhCaS9MnwcZLsPpMSKnz"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/Badge.sol",
    "id": 117,
    "exportedSymbols": {
      "Badge": [
        116
      ],
      "Base64": [
        3368
      ],
      "ERC165": [
        3589
      ],
      "ERC4671": [
        730
      ],
      "IERC165": [
        3601
      ],
      "IERC4671": [
        782
      ],
      "IERC4671Enumerable": [
        818
      ],
      "IERC4671Metadata": [
        844
      ],
      "Math": [
        4466
      ],
      "Strings": [
        3565
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:1328:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "33:23:0",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 2,
        "nodeType": "ImportDirective",
        "src": "58:50:0",
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Base64.sol",
        "file": "@openzeppelin/contracts/utils/Base64.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 117,
        "sourceUnit": 3369,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3,
        "nodeType": "ImportDirective",
        "src": "110:23:0",
        "absolutePath": "contracts/ERC4671.sol",
        "file": "./ERC4671.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 117,
        "sourceUnit": 731,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 116,
        "nodeType": "ContractDefinition",
        "src": "166:1195:0",
        "nodes": [
          {
            "id": 7,
            "nodeType": "VariableDeclaration",
            "src": "198:24:0",
            "constant": false,
            "mutability": "mutable",
            "name": "badgeName",
            "nameLocation": "213:9:0",
            "scope": 116,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 6,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "198:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "id": 9,
            "nodeType": "VariableDeclaration",
            "src": "229:31:0",
            "constant": false,
            "mutability": "mutable",
            "name": "badgeDescription",
            "nameLocation": "244:16:0",
            "scope": 116,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 8,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "229:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "id": 13,
            "nodeType": "VariableDeclaration",
            "src": "269:45:0",
            "constant": false,
            "functionSelector": "b708f2fa",
            "mutability": "mutable",
            "name": "isUserMinted",
            "nameLocation": "302:12:0",
            "scope": 116,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 12,
              "keyType": {
                "id": 10,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "278:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "269:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 11,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "289:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 19,
            "nodeType": "EventDefinition",
            "src": "323:48:0",
            "anonymous": false,
            "name": "MintToken",
            "nameLocation": "329:9:0",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "347:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "339:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "339:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "toeknId",
                  "nameLocation": "362:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "354:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "354:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "338:32:0"
            }
          },
          {
            "id": 43,
            "nodeType": "FunctionDefinition",
            "src": "379:227:0",
            "body": {
              "id": 42,
              "nodeType": "Block",
              "src": "518:88:0",
              "statements": [
                {
                  "expression": {
                    "id": 36,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34,
                      "name": "badgeName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "529:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 35,
                      "name": "_badgeName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "541:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "529:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 37,
                  "nodeType": "ExpressionStatement",
                  "src": "529:22:0"
                },
                {
                  "expression": {
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38,
                      "name": "badgeDescription",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "562:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 39,
                      "name": "_badgeDescription",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "581:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "562:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 41,
                  "nodeType": "ExpressionStatement",
                  "src": "562:36:0"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 30,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21,
                    "src": "502:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 31,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23,
                    "src": "509:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 32,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 29,
                  "name": "ERC4671",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 730,
                  "src": "494:7:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "494:23:0"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "405:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "391:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "391:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "426:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "412:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "412:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "mutability": "mutable",
                  "name": "_badgeName",
                  "nameLocation": "449:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "435:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "435:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "mutability": "mutable",
                  "name": "_badgeDescription",
                  "nameLocation": "475:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "461:31:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "461:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "390:103:0"
            },
            "returnParameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "518:0:0"
            },
            "scope": 116,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80,
            "nodeType": "FunctionDefinition",
            "src": "614:262:0",
            "body": {
              "id": 79,
              "nodeType": "Block",
              "src": "666:210:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 55,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "685:25:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 51,
                            "name": "isUserMinted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "686:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 54,
                          "indexExpression": {
                            "expression": {
                              "id": 52,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "699:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 53,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "699:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "686:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5573657220616c7265616479206d696e746564",
                        "id": 56,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "712:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9defa9f234b948faa7db825ce00eace6815239fc7ead702ce32199330f8c42f",
                          "typeString": "literal_string \"User already minted\""
                        },
                        "value": "User already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9defa9f234b948faa7db825ce00eace6815239fc7ead702ce32199330f8c42f",
                          "typeString": "literal_string \"User already minted\""
                        }
                      ],
                      "id": 50,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "677:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "677:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "677:57:0"
                },
                {
                  "assignments": [
                    60
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "753:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 79,
                      "src": "745:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 59,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "745:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 65,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 62,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "769:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "769:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 61,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 500,
                      "src": "763:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "763:17:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "745:35:0"
                },
                {
                  "expression": {
                    "id": 71,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 66,
                        "name": "isUserMinted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "791:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 69,
                      "indexExpression": {
                        "expression": {
                          "id": 67,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "804:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 68,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "804:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "791:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 70,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "818:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "791:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 72,
                  "nodeType": "ExpressionStatement",
                  "src": "791:31:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 74,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "848:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "848:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 76,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "860:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 73,
                      "name": "MintToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "838:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "838:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78,
                  "nodeType": "EmitStatement",
                  "src": "833:35:0"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "623:4:0",
            "parameters": {
              "id": 48,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "636:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "628:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "628:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "648:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "640:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "640:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "627:29:0"
            },
            "returnParameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "666:0:0"
            },
            "scope": 116,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 115,
            "nodeType": "FunctionDefinition",
            "src": "884:474:0",
            "body": {
              "id": 114,
              "nodeType": "Block",
              "src": "972:386:0",
              "statements": [
                {
                  "assignments": [
                    89
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89,
                      "mutability": "mutable",
                      "name": "dataURI",
                      "nameLocation": "996:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 114,
                      "src": "983:20:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 88,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "983:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "7b",
                        "id": 92,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1037:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52",
                          "typeString": "literal_string \"{\""
                        },
                        "value": "{"
                      },
                      {
                        "hexValue": "226e616d65223a2022",
                        "id": 93,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1059:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_92eb2af4325a1f29529688124f0869dc0de3154f09f2a84d73f5c6d33cc3af37",
                          "typeString": "literal_string \"\"name\": \"\""
                        },
                        "value": "\"name\": \""
                      },
                      {
                        "id": 94,
                        "name": "badgeName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "1072:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "hexValue": "222c",
                        "id": 95,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1083:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb",
                          "typeString": "literal_string \"\",\""
                        },
                        "value": "\","
                      },
                      {
                        "hexValue": "226465736372697074696f6e223a2022",
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1106:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_63efc49e26c2a0691fbd118ad4ace9a69fa64a27d6ecfb0468e1c404f7b79c0a",
                          "typeString": "literal_string \"\"description\": \"\""
                        },
                        "value": "\"description\": \""
                      },
                      {
                        "id": 97,
                        "name": "badgeDescription",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "1126:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "hexValue": "22",
                        "id": 98,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1144:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0",
                          "typeString": "literal_string \"\"\""
                        },
                        "value": "\""
                      },
                      {
                        "hexValue": "7d",
                        "id": 99,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1162:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff",
                          "typeString": "literal_string \"}\""
                        },
                        "value": "}"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52",
                          "typeString": "literal_string \"{\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_92eb2af4325a1f29529688124f0869dc0de3154f09f2a84d73f5c6d33cc3af37",
                          "typeString": "literal_string \"\"name\": \"\""
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb",
                          "typeString": "literal_string \"\",\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_63efc49e26c2a0691fbd118ad4ace9a69fa64a27d6ecfb0468e1c404f7b79c0a",
                          "typeString": "literal_string \"\"description\": \"\""
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0",
                          "typeString": "literal_string \"\"\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff",
                          "typeString": "literal_string \"}\""
                        }
                      ],
                      "expression": {
                        "id": 90,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1006:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 91,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "1006:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1006:170:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "983:193:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c",
                            "id": 106,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1252:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa",
                              "typeString": "literal_string \"data:application/json;base64,\""
                            },
                            "value": "data:application/json;base64,"
                          },
                          {
                            "arguments": [
                              {
                                "id": 109,
                                "name": "dataURI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89,
                                "src": "1316:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 107,
                                "name": "Base64",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3368,
                                "src": "1302:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Base64_$3368_$",
                                  "typeString": "type(library Base64)"
                                }
                              },
                              "id": 108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3367,
                              "src": "1302:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (bytes memory) pure returns (string memory)"
                              }
                            },
                            "id": 110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1302:22:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa",
                              "typeString": "literal_string \"data:application/json;base64,\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 104,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1217:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1217:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1217:122:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1196:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 102,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1196:6:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1196:154:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 87,
                  "id": 113,
                  "nodeType": "Return",
                  "src": "1189:161:0"
                }
              ]
            },
            "baseFunctions": [
              313
            ],
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "893:8:0",
            "overrides": {
              "id": 84,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "939:8:0"
            },
            "parameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "910:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "902:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "902:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "901:17:0"
            },
            "returnParameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "957:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "957:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "956:15:0"
            },
            "scope": 116,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "ERC4671",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 730,
              "src": "184:7:0"
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "184:7:0"
          }
        ],
        "canonicalName": "Badge",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          116,
          730,
          3589,
          818,
          844,
          782,
          3601
        ],
        "name": "Badge",
        "nameLocation": "175:5:0",
        "scope": 117,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 0
}